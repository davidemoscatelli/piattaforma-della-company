# Generated by Django 5.2.1 on 2025-05-18 18:38

import django.db.models.deletion
import trekking.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Difficulty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nome Difficoltà')),
                ('icon_class', models.CharField(blank=True, help_text="Es. 'fas fa-shoe-prints' per Font Awesome o nome file SVG.", max_length=50, null=True, verbose_name='Classe Icona')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
            ],
            options={
                'verbose_name': 'Grado di Difficoltà',
                'verbose_name_plural': 'Gradi di Difficoltà',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Trek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome Trekking')),
                ('slug', models.SlugField(blank=True, help_text='Lasciare vuoto per generare automaticamente dal nome.', max_length=220, unique=True)),
                ('description_short', models.TextField(help_text='Anteprima per le liste dei trekking.', verbose_name='Descrizione Breve')),
                ('description_long', models.TextField(verbose_name='Descrizione Completa')),
                ('main_image', models.ImageField(help_text='Immagine rappresentativa del trekking.', upload_to=trekking.models.Trek.get_main_image_upload_path, verbose_name='Immagine Principale')),
                ('gpx_file', models.FileField(blank=True, null=True, upload_to=trekking.models.Trek.get_gpx_upload_path, verbose_name='File Traccia GPX')),
                ('length_km', models.FloatField(blank=True, null=True, verbose_name='Lunghezza (km)')),
                ('elevation_gain_meters', models.PositiveIntegerField(blank=True, null=True, verbose_name='Dislivello Positivo (m)')),
                ('elevation_loss_meters', models.PositiveIntegerField(blank=True, help_text='Se diverso da quello positivo (es. traversate).', null=True, verbose_name='Dislivello Negativo (m)')),
                ('estimated_duration', models.CharField(blank=True, help_text="Es: '3-4 ore', '1 giorno'", max_length=100, null=True, verbose_name='Durata Stimata')),
                ('location_area', models.CharField(blank=True, help_text='Es: Dolomiti Bellunesi, Appennino Ligure', max_length=150, null=True, verbose_name='Area Geografica')),
                ('meeting_point_general_info', models.TextField(blank=True, help_text='Indicazioni generiche se il trekking non è schedulato.', null=True, verbose_name='Info Generali Punto di Ritrovo')),
                ('equipment_mandatory', models.TextField(blank=True, null=True, verbose_name='Equipaggiamento Obbligatorio')),
                ('equipment_recommended', models.TextField(blank=True, null=True, verbose_name='Equipaggiamento Consigliato')),
                ('notes', models.TextField(blank=True, help_text="Eventuali particolarità, fonti d'acqua, rifugi, ecc.", null=True, verbose_name='Note Aggiuntive')),
                ('is_published', models.BooleanField(default=True, verbose_name='Pubblicato')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data Creazione')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data Aggiornamento')),
                ('difficulty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trekking.difficulty', verbose_name='Grado di Difficoltà')),
            ],
            options={
                'verbose_name': 'Trekking / Percorso',
                'verbose_name_plural': 'Trekking / Percorsi',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledTrek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Data Uscita')),
                ('start_time', models.TimeField(verbose_name='Orario di Ritrovo')),
                ('meeting_point_specific', models.TextField(help_text='Indirizzo preciso, coordinate, link Google Maps per questa uscita.', verbose_name='Punto di Ritrovo Specifico')),
                ('guide_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome Guida/Accompagnatore')),
                ('max_participants', models.PositiveIntegerField(verbose_name='Numero Massimo Partecipanti')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Lasciare vuoto o 0 se gratuito.', max_digits=7, null=True, verbose_name='Quota di Partecipazione (€)')),
                ('is_active', models.BooleanField(default=True, help_text='Deselezionare per nascondere uscite passate o annullate.', verbose_name='Uscita Attiva')),
                ('registration_open', models.BooleanField(default=True, verbose_name='Iscrizioni Aperte')),
                ('additional_info_specific', models.TextField(blank=True, null=True, verbose_name="Info Aggiuntive Specifiche per l'Uscita")),
                ('trek', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trekking.trek', verbose_name='Trekking di Riferimento')),
            ],
            options={
                'verbose_name': 'Uscita Programmata',
                'verbose_name_plural': 'Uscite Programmate',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='TrekImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=trekking.models.TrekImage.get_gallery_image_upload_path, verbose_name='Immagine Galleria')),
                ('caption', models.CharField(blank=True, max_length=200, null=True, verbose_name='Didascalia')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('trek', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='trekking.trek', verbose_name='Trekking di Riferimento')),
            ],
            options={
                'verbose_name': 'Immagine Galleria Trekking',
                'verbose_name_plural': 'Immagini Galleria Trekking',
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='TrekRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=100, verbose_name='Cognome')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefono')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Data Iscrizione')),
                ('status', models.CharField(choices=[('IN_ATTESA', 'In Attesa'), ('CONFERMATA', 'Confermata'), ('ANNULLATA_UTENTE', 'Annullata (Utente)'), ('ANNULLATA_ADMIN', 'Annullata (Admin)'), ('COMPLETATA', 'Completata')], default='IN_ATTESA', max_length=20, verbose_name='Stato Iscrizione')),
                ('notes_user', models.TextField(blank=True, null=True, verbose_name="Note dall'Utente")),
                ('admin_notes', models.TextField(blank=True, null=True, verbose_name='Note Admin (interne)')),
                ('scheduled_trek', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='trekking.scheduledtrek', verbose_name='Uscita Programmata')),
                ('user', models.ForeignKey(blank=True, help_text="Collegato se l'utente era loggato durante l'iscrizione.", null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utente Registrato')),
            ],
            options={
                'verbose_name': 'Iscrizione Trekking',
                'verbose_name_plural': 'Iscrizioni Trekking',
                'ordering': ['-registration_date'],
                'unique_together': {('scheduled_trek', 'email')},
            },
        ),
    ]
